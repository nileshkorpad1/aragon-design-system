// This contains all of the styles for the badge
// rather than just the color/theme because of
// no style sheet support for directives.
@import '../core/theming/palette';
@import '../core/theming/theming';
@import '../core/typography/typography-utils';
@import '~@angular/cdk/a11y';
$wtf2-badge-font-size: 12px;
$wtf2-badge-font-weight: 600;
$wtf2-badge-default-size: 22px !default;
$wtf2-badge-small-size: $wtf2-badge-default-size - 6;
$wtf2-badge-large-size: $wtf2-badge-default-size+6;
// Mixin for building offset given different sizes
@mixin _wtf2-badge-size($size) {
    .wtf2-badge-content {
        width: $size;
        height: $size;
        line-height: $size;
    }
    &.wtf2-badge-above {
        .wtf2-badge-content {
            top: -$size / 2;
        }
    }
    &.wtf2-badge-below {
        .wtf2-badge-content {
            bottom: -$size / 2;
        }
    }
    &.wtf2-badge-before {
        .wtf2-badge-content {
            left: -$size;
        }
    }
    [dir='rtl'] &.wtf2-badge-before {
        .wtf2-badge-content {
            left: auto;
            right: -$size;
        }
    }
    &.wtf2-badge-after {
        .wtf2-badge-content {
            right: -$size;
        }
    }
    [dir='rtl'] &.wtf2-badge-after {
        .wtf2-badge-content {
            right: auto;
            left: -$size;
        }
    }
    &.wtf2-badge-overlap {
        &.wtf2-badge-before {
            .wtf2-badge-content {
                left: -$size / 2;
            }
        }
        [dir='rtl'] &.wtf2-badge-before {
            .wtf2-badge-content {
                left: auto;
                right: -$size / 2;
            }
        }
        &.wtf2-badge-after {
            .wtf2-badge-content {
                right: -$size / 2;
            }
        }
        [dir='rtl'] &.wtf2-badge-after {
            .wtf2-badge-content {
                right: auto;
                left: -$size / 2;
            }
        }
    }
}

@mixin wtf2-badge-theme($theme) {
    $accent: map-get($theme, accent);
    $warn: map-get($theme, warn);
    $primary: map-get($theme, primary);
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);
    .wtf2-badge-content {
        color: wtf2-color($primary, default-contrast);
        background: wtf2-color($primary);
        @include cdk-high-contrast {
            outline: solid 1px;
            border-radius: 0;
        }
    }
    .wtf2-badge-accent {
        .wtf2-badge-content {
            background: wtf2-color($accent);
            color: wtf2-color($accent, default-contrast);
        }
    }
    .wtf2-badge-warn {
        .wtf2-badge-content {
            color: wtf2-color($warn, default-contrast);
            background: wtf2-color($warn);
        }
    }
    .wtf2-badge {
        position: relative;
    }
    .wtf2-badge-hidden {
        .wtf2-badge-content {
            display: none;
        }
    }
    .wtf2-badge-disabled {
        .wtf2-badge-content {
            $app-background: wtf2-color($background, 'background');
            $badge-color: wtf2-color($foreground, disabled-button);
            // The disabled color usually has some kind of opacity, but because the badge is overlayed
            // on top of something else, it won't look good if it's opaque. If it is a color *type*,
            // we convert it into a solid color by taking the opacity from the rgba value and using
            // the value to determine the percentage of the background to put into foreground when
            // mixing the colors together.
            @if (type-of($badge-color)==color and type-of($app-background)==color) {
                $badge-opacity: opacity($badge-color);
                background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);
            }
            @else {
                background: $badge-color;
            }
            color: wtf2-color($foreground, disabled-text);
        }
    }
    .wtf2-badge-content {
        position: absolute;
        text-align: center;
        display: inline-block;
        border-radius: 50%;
        transition: transform 200ms ease-in-out;
        transform: scale(0.6);
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        pointer-events: none;
    }
    .ng-animate-disabled .wtf2-badge-content,
    .wtf2-badge-content._wtf2-animation-noopable {
        transition: none;
    }
    // The active class is added after the element is added
    // so it can animate scale to default
    .wtf2-badge-content.wtf2-badge-active {
        // Scale to `none` instead of `1` to avoid blurry text in some browsers.
        transform: none;
    }
    .wtf2-badge-small {
        @include _wtf2-badge-size($wtf2-badge-small-size);
    }
    .wtf2-badge-medium {
        @include _wtf2-badge-size($wtf2-badge-default-size);
    }
    .wtf2-badge-large {
        @include _wtf2-badge-size($wtf2-badge-large-size);
    }
}

@mixin wtf2-badge-typography($config) {
    .wtf2-badge-content {
        font-weight: $wtf2-badge-font-weight;
        font-size: $wtf2-badge-font-size;
        font-family: wtf2-font-family($config);
    }
    .wtf2-badge-small .wtf2-badge-content {
        // Set the font size to 75% of the original.
        font-size: $wtf2-badge-font-size * 0.75;
    }
    .wtf2-badge-large .wtf2-badge-content {
        font-size: $wtf2-badge-font-size * 2;
    }
}
