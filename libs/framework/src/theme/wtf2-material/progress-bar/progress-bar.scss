@import '../core/style/variables';
@import '../core/style/vendor-prefixes';
@import '../core/style/noop-animation';
@import '~@angular/cdk/a11y';
$wtf2-progress-bar-height: 4px !default;
$wtf2-progress-bar-full-animation-duration: 2000ms !default;
$wtf2-progress-bar-piece-animation-duration: 250ms !default;
.wtf2-progress-bar {
    @include _noop-animation();
    display: block;
    // Height is provided for wtf2-progress-bar to act as a default.
    height: $wtf2-progress-bar-height;
    overflow: hidden;
    position: relative;
    transition: opacity $wtf2-progress-bar-piece-animation-duration linear;
    width: 100%;
    // Base styles that are re-used across all of the progress bar children.
    .wtf2-progress-bar-element,
    .wtf2-progress-bar-fill::after {
        height: 100%;
        position: absolute;
        width: 100%;
    }
    // The progress bar background is used to show the bubble animation scrolling behind a
    // buffering progress bar.
    .wtf2-progress-bar-background {
        // The width is set to be 10px longer than the container as it will be translated 10px
        // during the background scroll animation.
        width: calc(100% + 10px);
        @include cdk-high-contrast {
            display: none;
        }
    }
    // The progress bar buffer is the bar indicator showing the buffer value and is only visible
    // beyond the current value of the primary progress bar.
    .wtf2-progress-bar-buffer {
        transform-origin: top left;
        transition: transform $wtf2-progress-bar-piece-animation-duration ease;
        @include cdk-high-contrast {
            border-top: solid 5px;
            opacity: 0.5;
        }
    }
    // The secondary progress bar is only used in the indeterminate animation, because of this it
    // is hidden in other uses.
    .wtf2-progress-bar-secondary {
        display: none;
    }
    // The progress bar fill fills the progress bar with the indicator color.
    .wtf2-progress-bar-fill {
        animation: none;
        transform-origin: top left;
        transition: transform $wtf2-progress-bar-piece-animation-duration ease;
        @include cdk-high-contrast {
            border-top: solid $wtf2-progress-bar-height;
        }
    }
    // A pseudo element is created for each progress bar bar that fills with the indicator color.
    .wtf2-progress-bar-fill::after {
        animation: none;
        content: '';
        display: inline-block;
        left: 0;
    }
    // Reverse the apparent directionality of progress vars for rtl.
    &[dir='rtl'],
    [dir='rtl'] & {
        transform: rotateY(180deg);
    }
    &[mode='query'] {
        transform: rotateZ(180deg);
        &[dir='rtl'],
        [dir='rtl'] & {
            transform: rotateZ(180deg) rotateY(180deg);
        }
    }
    &[mode='indeterminate'],
    &[mode='query'] {
        .wtf2-progress-bar-fill {
            transition: none;
        }
        .wtf2-progress-bar-primary {
            // Avoids stacked animation tearing in Firefox >= 57.
            @include backface-visibility(hidden);
            animation: wtf2-progress-bar-primary-indeterminate-translate $wtf2-progress-bar-full-animation-duration infinite linear;
            left: -145.166611%;
        }
        .wtf2-progress-bar-primary.wtf2-progress-bar-fill::after {
            // Avoids stacked animation tearing in Firefox >= 57.
            @include backface-visibility(hidden);
            animation: wtf2-progress-bar-primary-indeterminate-scale $wtf2-progress-bar-full-animation-duration infinite linear;
        }
        .wtf2-progress-bar-secondary {
            // Avoids stacked animation tearing in Firefox >= 57.
            @include backface-visibility(hidden);
            animation: wtf2-progress-bar-secondary-indeterminate-translate $wtf2-progress-bar-full-animation-duration infinite linear;
            left: -54.888891%;
            display: block;
        }
        .wtf2-progress-bar-secondary.wtf2-progress-bar-fill::after {
            // Avoids stacked animation tearing in Firefox >= 57.
            @include backface-visibility(hidden);
            animation: wtf2-progress-bar-secondary-indeterminate-scale $wtf2-progress-bar-full-animation-duration infinite linear;
        }
    }
    &[mode='buffer'] {
        .wtf2-progress-bar-background {
            // Avoids stacked animation tearing in Firefox >= 57.
            @include backface-visibility(hidden);
            animation: wtf2-progress-bar-background-scroll $wtf2-progress-bar-piece-animation-duration infinite linear;
            // Needs to be explicit here so it can overwrite the `display: none`
            // in all other variants in high contrast mode.
            display: block;
        }
    }
    // Disabled animations handling.
    &._wtf2-animation-noopable {
        .wtf2-progress-bar-fill,
        .wtf2-progress-bar-fill::after,
        .wtf2-progress-bar-buffer,
        .wtf2-progress-bar-primary,
        .wtf2-progress-bar-primary.wtf2-progress-bar-fill::after,
        .wtf2-progress-bar-secondary,
        .wtf2-progress-bar-secondary.wtf2-progress-bar-fill::after,
        .wtf2-progress-bar-background {
            animation: none;
            transition: none;
        }
    }
}

// The values used for animations in wtf2-progress-bar, both timing and transFormation, can be
// considered magic values. They are sourced from the Material Design example spec and duplicate
// the values of the original designers definitions.
//
// The indeterminate state is essentially made up of two progress bars, one primary (the one that
// is shown in both the determinate and indeterminate states) and one secondary, which essentially
// mirrors the primary progress bar in appearance but is only shown to assist with the
// indeterminate animations.
// KEYFRAME BLOCK                      DESCRIPTION
// primary-indeterminate-translate     Translation of the primary progressbar across the screen
// primary-indeterminate-scale         Scaling of the primary bar as it's being translated
//                                     across the screen
// secondary-indeterminate-translate   Translation of the secondary bar across the screen
// secondary-indeterminate-scale       Scaling of the secondary bar as it's being translated
//                                     across the screen
//
// Because two different transform animations need to be applied at once, the translation is
// applied to the outer element and the scaling is applied to the inner element, which provides the
// illusion necessary to make the animation work.
// Progress Bar Timing functions:
// $wtf2-progress-bar-primary-indeterminate-translate-step-1 has no timing function.
$wtf2-progress-bar-primary-indeterminate-translate-step-2: cubic-bezier(0.5, 0, 0.701732, 0.495819) !default;
$wtf2-progress-bar-primary-indeterminate-translate-step-3: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352) !default;
// $wtf2-progress-bar-primary-indeterminate-translate-step-4 has no timing function.
// $wtf2-progress-bar-primary-indeterminate-scale-step-1 has no timing function
$wtf2-progress-bar-primary-indeterminate-scale-step-2: cubic-bezier(0.334731, 0.12482, 0.785844, 1) !default;
$wtf2-progress-bar-primary-indeterminate-scale-step-3: cubic-bezier(0.06, 0.11, 0.6, 1) !default;
// $wtf2-progress-bar-primary-indeterminate-scale-step-4 has no timing function
$wtf2-progress-bar-secondary-indeterminate-translate-step-1: cubic-bezier(0.15, 0, 0.515058, 0.409685) !default;
$wtf2-progress-bar-secondary-indeterminate-translate-step-2: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712) !default;
$wtf2-progress-bar-secondary-indeterminate-translate-step-3: cubic-bezier(0.4, 0.627035, 0.6, 0.902026) !default;
// $wtf2-progress-bar-secondary-indeterminate-translate-step-4 has no timing function
$wtf2-progress-bar-secondary-indeterminate-scale-step-1: cubic-bezier(0.15, 0, 0.515058, 0.409685) !default;
$wtf2-progress-bar-secondary-indeterminate-scale-step-2: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712) !default;
$wtf2-progress-bar-secondary-indeterminate-scale-step-3: cubic-bezier(0.4, 0.627035, 0.6, 0.902026) !default;
// $wtf2-progress-bar-secondary-indeterminate-scale-step-4 has no timing function
// Animations for indeterminate and query mode.
// Primary indicator.
@keyframes wtf2-progress-bar-primary-indeterminate-translate {
    0% {
        transform: translateX(0);
    }
    20% {
        animation-timing-function: $wtf2-progress-bar-primary-indeterminate-translate-step-2;
        transform: translateX(0);
    }
    59.15% {
        animation-timing-function: $wtf2-progress-bar-primary-indeterminate-translate-step-3;
        transform: translateX(83.67142%);
    }
    100% {
        transform: translateX(200.611057%);
    }
}

@keyframes wtf2-progress-bar-primary-indeterminate-scale {
    0% {
        transform: scaleX(0.08);
    }
    36.65% {
        animation-timing-function: $wtf2-progress-bar-primary-indeterminate-scale-step-2;
        transform: scaleX(0.08);
    }
    69.15% {
        animation-timing-function: $wtf2-progress-bar-primary-indeterminate-scale-step-3;
        transform: scaleX(0.661479);
    }
    100% {
        transform: scaleX(0.08);
    }
}

// Secondary indicator.
@keyframes wtf2-progress-bar-secondary-indeterminate-translate {
    0% {
        animation-timing-function: $wtf2-progress-bar-secondary-indeterminate-translate-step-1;
        transform: translateX(0);
    }
    25% {
        animation-timing-function: $wtf2-progress-bar-secondary-indeterminate-translate-step-2;
        transform: translateX(37.651913%);
    }
    48.35% {
        animation-timing-function: $wtf2-progress-bar-secondary-indeterminate-translate-step-3;
        transform: translateX(84.386165%);
    }
    100% {
        transform: translateX(160.277782%);
    }
}

@keyframes wtf2-progress-bar-secondary-indeterminate-scale {
    0% {
        animation-timing-function: $wtf2-progress-bar-secondary-indeterminate-scale-step-1;
        transform: scaleX(0.08);
    }
    19.15% {
        animation-timing-function: $wtf2-progress-bar-secondary-indeterminate-scale-step-2;
        transform: scaleX(0.457104);
    }
    44.15% {
        animation-timing-function: $wtf2-progress-bar-secondary-indeterminate-scale-step-3;
        transform: scaleX(0.72796);
    }
    100% {
        transform: scaleX(0.08);
    }
}

// Animation for buffer mode.
@keyframes wtf2-progress-bar-background-scroll {
    to {
        // Needs to be in multiples of the size of the buffer circles.
        transform: translateX(-$wtf2-progress-bar-height * 2);
    }
}
