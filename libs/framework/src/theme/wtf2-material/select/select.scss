@import '../core/style/menu-common';
@import '../core/style/list-common';
@import '../core/style/variables';
@import '../core/style/vendor-prefixes';
@import '~@angular/cdk/a11y';
$wtf2-select-arrow-size: 5px !default;
$wtf2-select-arrow-margin: 4px !default;
$wtf2-select-panel-max-height: 256px !default;
$wtf2-select-item-height: 3em !default;
$wtf2-select-placeholder-arrow-space: 2 * ($wtf2-select-arrow-size + $wtf2-select-arrow-margin);
.wtf2-select {
    display: inline-block;
    width: 100%;
    outline: none;
}

.wtf2-select-trigger {
    display: inline-table;
    cursor: pointer;
    position: relative;
    box-sizing: border-box;
    .wtf2-select-disabled & {
        @include user-select(none);
        cursor: default;
    }
}

.wtf2-select-value {
    display: table-cell;
    max-width: 0;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.wtf2-select-value-text {
    @include wtf2-truncate-line();
}

.wtf2-select-arrow-wrapper {
    display: table-cell;
    vertical-align: middle;
    // When used in a box appearance form-field the arrow should be shifted up 50%.
    .wtf2-form-field-appearance-fill & {
        transform: translateY(-50%);
    }
    // When used in a outline form-field the arrow should be shifted up 25%.
    .wtf2-form-field-appearance-outline & {
        transform: translateY(-25%);
    }
    // When used in a standard appearance form-field the arrow should be shifted up 50%,
    // but only if it's not empty and it has a label.
    .wtf2-form-field-appearance-standard.wtf2-form-field-has-label .wtf2-select:not(.wtf2-select-empty) & {
        transform: translateY(-50%);
    }
    // Aniwtf2e the arrow position, but only when the transitioning to empty (animate the arrow down)
    // This is in line with the wtf2-form-field label animation
    .wtf2-form-field-appearance-standard .wtf2-select.wtf2-select-empty & {
        transition: transform $swift-ease-out-duration $swift-ease-out-timing-function;
    }
    ._wtf2-animation-noopable.wtf2-form-field-appearance-standard .wtf2-select.wtf2-select-empty & {
        transition: none;
    }
}

.wtf2-select-arrow {
    width: 0;
    height: 0;
    border-left: $wtf2-select-arrow-size solid transparent;
    border-right: $wtf2-select-arrow-size solid transparent;
    border-top: $wtf2-select-arrow-size solid;
    margin: 0 $wtf2-select-arrow-margin;
}

.wtf2-select-panel-wrap {
    // Prevents width-issues of wtf2-select-panel with width: calc(100% + 32px)
    // in IE11 due to the parents display: flex;
    flex-basis: 100%;
}

.wtf2-select-panel {
    @include wtf2-menu-base();
    padding-top: 0;
    padding-bottom: 0;
    max-height: $wtf2-select-panel-max-height;
    min-width: 100%; // prevents some animation twitching and test inconsistencies in IE11
    border-radius: 4px;
    @include cdk-high-contrast {
        outline: solid 1px;
    }
}

// Override optgroup and option to scale based on font-size of the trigger.
.wtf2-select-panel {
    .wtf2-optgroup-label,
    .wtf2-option {
        font-size: inherit;
        line-height: $wtf2-select-item-height;
        height: $wtf2-select-item-height;
    }
}

.wtf2-form-field-type-wtf2-select {
    &:not(.wtf2-form-field-disabled) .wtf2-form-field-flex {
        cursor: pointer;
    }
    .wtf2-form-field-label {
        width: calc(100% - #{$wtf2-select-placeholder-arrow-space});
    }
}

.wtf2-select-placeholder {
    // Delay the transition until the label has animated about a third of the way through, in
    // order to prevent the placeholder from overlapping for a split second.
    transition: color $swift-ease-out-duration $swift-ease-out-duration / 3 $swift-ease-out-timing-function;
    ._wtf2-animation-noopable & {
        transition: none;
    }
    .wtf2-form-field-hide-placeholder & {
        color: transparent;
        // Overwrite browser specific CSS properties that can overwrite the `color` property.
        // Some developers seem to use this approach to easily overwrite the placeholder / label color.
        -webkit-text-fill-color: transparent;
        // Remove the transition to prevent the placeholder
        // from overlapping when the label comes back down.
        transition: none;
        // Prevents the '...' from showing on the parent element.
        display: block;
    }
}
