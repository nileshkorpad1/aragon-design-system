@import '../core/theming/palette';
@import '../core/theming/theming';
@import '../core/style/form-common';
@import '../core/typography/typography-utils';
@import './form-field-fill-theme.scss';
@import './form-field-legacy-theme.scss';
@import './form-field-outline-theme.scss';
@import './form-field-standard-theme.scss';
// Theme styles that apply to all appearances of the form-field.
@mixin wtf2-form-field-theme($theme) {
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $warn: map-get($theme, warn);
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);
    $is-dark-theme: map-get($theme, is-dark);
    // Label colors. Required is used for the `*` star shown in the label.
    $label-color: wtf2-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));
    $focused-label-color: wtf2-color($primary);
    $required-label-color: wtf2-color($accent);
    // Underline colors.
    $underline-color-base: wtf2-color($foreground, divider, if($is-dark-theme, 1, 0.87));
    $underline-color-accent: wtf2-color($accent);
    $underline-color-warn: wtf2-color($warn);
    $underline-focused-color: wtf2-color($primary);
    .wtf2-form-field-label {
        color: $label-color;
    }
    .wtf2-hint {
        color: $label-color;
    }
    .wtf2-form-field.wtf2-focused .wtf2-form-field-label {
        color: $focused-label-color;
        &.wtf2-accent {
            color: $underline-color-accent;
        }
        &.wtf2-warn {
            color: $underline-color-warn;
        }
    }
    .wtf2-focused .wtf2-form-field-required-marker {
        color: $required-label-color;
    }
    .wtf2-form-field-ripple {
        background-color: $underline-color-base;
    }
    .wtf2-form-field.wtf2-focused {
        .wtf2-form-field-ripple {
            background-color: $underline-focused-color;
            &.wtf2-accent {
                background-color: $underline-color-accent;
            }
            &.wtf2-warn {
                background-color: $underline-color-warn;
            }
        }
    }
    .wtf2-form-field-type-wtf2-native-select.wtf2-focused:not(.wtf2-form-field-invalid) {
        .wtf2-form-field-infix::after {
            color: $underline-focused-color;
        }
        &.wtf2-accent .wtf2-form-field-infix::after {
            color: $underline-color-accent;
        }
        &.wtf2-warn .wtf2-form-field-infix::after {
            color: $underline-color-warn;
        }
    }
    // Styling for the error state of the form field. Note that while the same can be
    // achieved with the ng-* classes, we use this approach in order to ensure that the same
    // logic is used to style the error state and to show the error messages.
    .wtf2-form-field.wtf2-form-field-invalid {
        .wtf2-form-field-label {
            color: $underline-color-warn;
            &.wtf2-accent,
            .wtf2-form-field-required-marker {
                color: $underline-color-warn;
            }
        }
        .wtf2-form-field-ripple,
        .wtf2-form-field-ripple.wtf2-accent {
            background-color: $underline-color-warn;
        }
    }
    .wtf2-error {
        color: $underline-color-warn;
    }
    @include wtf2-form-field-legacy-theme($theme);
    @include wtf2-form-field-standard-theme($theme);
    @include wtf2-form-field-fill-theme($theme);
    @include wtf2-form-field-outline-theme($theme);
}

// Used to make instances of the _wtf2-form-field-label-floating mixin negligibly different,
// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some
// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters
// an unknown pseudo-class it will discard the entire rule set.
$wtf2-form-field-dedupe: 0;
// Applies a floating label above the form field control itself.
@mixin _wtf2-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {
    transform: translateY(-$infix-margin-top - $infix-padding + $wtf2-form-field-dedupe) scale($font-scale);
    width: 100% / $font-scale + $wtf2-form-field-dedupe;
    $wtf2-form-field-dedupe: $wtf2-form-field-dedupe + 0.00001 !global;
}

@mixin wtf2-form-field-typography($config) {
    // The unit-less line-height from the font config.
    $line-height: wtf2-line-height($config, input);
    // The amount to scale the font for the floating label and subscript.
    $subscript-font-scale: 0.75;
    // The amount to scale the font for the prefix and suffix icons.
    $prefix-suffix-icon-font-scale: 1.5;
    // The padding on the infix. Mocks show half of the text size.
    $infix-padding: 0.5em;
    // The margin applied to the form-field-infix to reserve space for the floating label.
    $infix-margin-top: 1em * $line-height * $subscript-font-scale;
    // Font size to use for the label and subscript text.
    $subscript-font-size: $subscript-font-scale * 100%;
    // Font size to use for the for the prefix and suffix icons.
    $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;
    // The space between the bottom of the .wtf2-form-field-flex area and the subscript wrapper.
    // Mocks show half of the text size, but this margin is applied to an element with the subscript
    // text font size, so we need to divide by the scale factor to make it half of the original text
    // size.
    $subscript-margin-top: 0.5em / $subscript-font-scale;
    // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's
    // absolutely positioned. This is a combination of the subscript's margin and line-height, but we
    // need to multiply by the subscript font scale factor since the wrapper has a larger font size.
    $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;
    .wtf2-form-field {
        @include wtf2-typography-level-to-styles($config, input);
    }
    .wtf2-form-field-wrapper {
        padding-bottom: $wrapper-padding-bottom;
    }
    .wtf2-form-field-prefix,
    .wtf2-form-field-suffix {
        // Allow icons in a prefix or suffix to adapt to the correct size.
        .wtf2-icon {
            font-size: $prefix-suffix-icon-font-size;
            line-height: $line-height;
        }
        // Allow icon buttons in a prefix or suffix to adapt to the correct size.
        .wtf2-icon-button {
            height: $prefix-suffix-icon-font-scale * 1em;
            width: $prefix-suffix-icon-font-scale * 1em;
            .wtf2-icon {
                height: $line-height * 1em;
                line-height: $line-height;
            }
        }
    }
    .wtf2-form-field-infix {
        padding: $infix-padding 0;
        // Throws off the baseline if we do it as a real margin, so we do it as a border instead.
        border-top: $infix-margin-top solid transparent;
    }
    .wtf2-form-field-can-float {
        &.wtf2-form-field-should-float .wtf2-form-field-label,
        .wtf2-input-server:focus+.wtf2-form-field-label-wrapper .wtf2-form-field-label {
            @include _wtf2-form-field-label-floating( $subscript-font-scale, $infix-padding, $infix-margin-top);
        }
        // Server-side rendered wtf2Input with a label attribute but label not shown
        // (used as a pure CSS stand-in for wtf2-form-field-should-float).
        .wtf2-input-server[label]:not(:label-shown)+.wtf2-form-field-label-wrapper .wtf2-form-field-label {
            @include _wtf2-form-field-label-floating( $subscript-font-scale, $infix-padding, $infix-margin-top);
        }
    }
    .wtf2-form-field-label-wrapper {
        top: -$infix-margin-top;
        padding-top: $infix-margin-top;
    }
    .wtf2-form-field-label {
        top: $infix-margin-top + $infix-padding;
    }
    .wtf2-form-field-underline {
        // We want the underline to start at the end of the content box, not the padding box,
        // so we move it up by the padding amount.
        bottom: $wrapper-padding-bottom;
    }
    .wtf2-form-field-subscript-wrapper {
        font-size: $subscript-font-size;
        margin-top: $subscript-margin-top;
        // We want the subscript to start at the end of the content box, not the padding box,
        // so we move it up by the padding amount (adjusted for the smaller font size);
        top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});
    }
    @include wtf2-form-field-legacy-typography($config);
    @include wtf2-form-field-standard-typography($config);
    @include wtf2-form-field-fill-typography($config);
    @include wtf2-form-field-outline-typography($config);
}