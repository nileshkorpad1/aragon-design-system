@import '../theming/theming';
@import '~@angular/cdk/a11y';
$wtf2-ripple-color-opacity: 0.1;
@mixin wtf2-ripple() {
    // The host element of an wtf2-ripple directive should always have a position of "absolute" or
    // "relative" so that the ripples inside are correctly positioned relatively to the container.
    .wtf2-ripple {
        overflow: hidden;
        // By default, every ripple container should have position: relative in favor of creating an
        // easy API for developers using the Wtf2Ripple directive.
        position: relative;
    }
    .wtf2-ripple.wtf2-ripple-unbounded {
        overflow: visible;
    }
    .wtf2-ripple-element {
        position: absolute;
        border-radius: 50%;
        pointer-events: none;
        transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);
        transform: scale(0);
        // In high contrast mode the ripple is opaque, causing it to obstruct the content.
        @include cdk-high-contrast {
            display: none;
        }
    }
}


/* Theme for the ripple elements.*/

@mixin wtf2-ripple-theme($theme) {
    $foreground: map_get($theme, foreground);
    $foreground-base: map_get($foreground, base);
    .wtf2-ripple-element {
        // If the ripple color is resolves to a color *type*, we can use it directly, otherwise
        // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.
        @if (type-of($foreground-base)==color) {
            background-color: rgba($foreground-base, $wtf2-ripple-color-opacity);
        }
        @else {
            background-color: $foreground-base;
            opacity: $wtf2-ripple-color-opacity;
        }
    }
}
