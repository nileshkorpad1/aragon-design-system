// TODO(jelbourn): Measure perf benefits for translate3d and will-change.
// TODO(jelbourn): Figure out if anchor hover underline actually happens in any browser.
@import 'button-base';
@import '../core/style/layout-common';
@import '~@angular/cdk/a11y';
.wtf2-button,
.wtf2-icon-button {
    .wtf2-button-focus-overlay {
        opacity: 0;
    }
}

// Only flat and stroked buttons (not raised, FABs or icon buttons) have a hover style.
// Use the same visual treatment for hover as for focus.
.wtf2-button:hover,
.wtf2-stroked-button:hover {
    .wtf2-button-focus-overlay {
        opacity: 0.04;
    }
}

// Disable the hover styles on non-hover devices. Since this is more of a progressive
// enhancement and not all desktop browsers support this kind of media query, we can't
// use something like `@media (hover)`.
@media (hover: none) {
    .wtf2-button:hover,
    .wtf2-stroked-button:hover {
        .wtf2-button-focus-overlay {
            opacity: 0;
        }
    }
}

// Should be placed after the `:hover` styles so the focused
// styling coming in from `wtf2-button-base` takes precedence.
.wtf2-button,
.wtf2-icon-button,
.wtf2-stroked-button,
.wtf2-flat-button {
    @include wtf2-button-base;
}

.wtf2-raised-button {
    @include wtf2-raised-button;
}

.wtf2-stroked-button {
    border: $wtf2-stroked-button-border-width solid currentColor;
    padding: $wtf2-stroked-button-padding;
    line-height: $wtf2-stroked-button-line-height;
    // Since the stroked button has has an actual border that reduces the available space for
    // child elements such as the ripple container or focus overlay, an inherited border radius
    // for the absolute-positioned child elements does not work properly. This is because the
    // child element cannot expand to the same boundaries as the parent element with a border.
    // In order to work around this issue by *not* hiding overflow, we adjust the child elements
    // to fully cover the actual button element. This means that the border-radius would be correct
    // then. See: https://github.com/angular/components/issues/13738
    .wtf2-button-ripple.wtf2-ripple,
    .wtf2-button-focus-overlay {
        top: -$wtf2-stroked-button-border-width;
        left: -$wtf2-stroked-button-border-width;
        right: -$wtf2-stroked-button-border-width;
        bottom: -$wtf2-stroked-button-border-width;
    }
}

.wtf2-fab {
    @include wtf2-fab($wtf2-fab-size, $wtf2-fab-padding);
}

.wtf2-mini-fab {
    @include wtf2-fab($wtf2-mini-fab-size, $wtf2-mini-fab-padding);
}

.wtf2-icon-button {
    padding: 0;
    // Reset the min-width from the button base.
    min-width: 0;
    width: $wtf2-icon-button-size;
    height: $wtf2-icon-button-size;
    flex-shrink: 0;
    line-height: $wtf2-icon-button-size;
    border-radius: $wtf2-icon-button-border-radius;
    i,
    .wtf2-icon {
        line-height: $wtf2-icon-button-line-height;
    }
}

// The ripple container and focus overlay should match the bounds of the entire button.
// Increase specificity for the ripple container because ripple styles are part of
// the `wtf2-core` mixin and can potentially overwrite the absolute position of the container.
.wtf2-button-ripple.wtf2-ripple,
.wtf2-button-focus-overlay {
    @include wtf2-fill;
    // Disable pointer events for the ripple container and focus overlay because the container
    // will overlay the user content and we don't want to disable mouse events on the user content.
    // Pointer events can be safely disabled because the ripple trigger element is the host element.
    pointer-events: none;
    // Inherit the border radius from the parent so that focus overlay and ripples don't exceed the
    // parent button boundaries. Note that an inherited border radius does not work properly if
    // the actual button element does have a border because it causes the inner content to be
    // smaller. We have special logic for stroked buttons to handle this scenario.
    border-radius: inherit;
}

// Fixes the ripples not clipping to the border radius on Safari. Uses `:not(:empty)`
// in order to avoid creating extra layers when there aren't any ripples.
.wtf2-button-ripple.wtf2-ripple:not(:empty) {
    transform: translateZ(0);
}

// Element that overlays the button to show focus and hover effects.
.wtf2-button-focus-overlay {
    opacity: 0;
    transition: $wtf2-button-focus-transition;
    ._wtf2-animation-noopable & {
        transition: none;
    }
    @include cdk-high-contrast {
        // Note that IE will render this in the same way, no
        // wtf2ter whether the theme is light or dark. This helps
        // with the readability of focused buttons.
        background-color: #fff;
    }
    @include cdk-high-contrast(black-on-white) {
        // For the black-on-white high contrast mode, the browser will set this element
        // to white, making it blend in with the background, hence why we need to set
        // it explicitly to black.
        background-color: #000;
    }
}

// For round buttons, the ripple container should clip child ripples to a circle.
.wtf2-button-ripple-round {
    border-radius: 50%;
    // z-index needed to make clipping to border-radius work correctly.
    // http://stackoverflow.com/questions/20001515/
    z-index: 1;
}

// Elements inside of all type of buttons should be vertical aligned in the middle.
.wtf2-button,
.wtf2-flat-button,
.wtf2-stroked-button,
.wtf2-raised-button,
.wtf2-icon-button,
.wtf2-fab,
.wtf2-mini-fab {
    .wtf2-button-wrapper>* {
        vertical-align: middle;
    }
}

// Align icon-buttons correctly inside of standard, fill, and outline form-field appearances.
.wtf2-form-field:not(.wtf2-form-field-appearance-legacy) {
    .wtf2-form-field-prefix,
    .wtf2-form-field-suffix {
        .wtf2-icon-button {
            display: block;
            font-size: inherit;
            width: 2.5em;
            height: 2.5em;
        }
    }
}

// Add an outline to make buttons more visible in high contrast mode. Stroked buttons
// don't need a special look in high-contrast mode, because those already have an outline.
@include cdk-high-contrast {
    .wtf2-button,
    .wtf2-flat-button,
    .wtf2-raised-button,
    .wtf2-icon-button,
    .wtf2-fab,
    .wtf2-mini-fab {
        outline: solid 1px;
    }
}
